{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to our website.</p>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"course-description/","title":"Advanced Fluid Power Systems: AI, Controls, and Sustainable Design","text":"<p>Below is a syllabus for Fluid Power Systems for Technicians, integrating advanced AI, controls, data collection, and software deployment to optimize labor use, system efficiency, and sustainability. Designed for a two-year technical program for non-engineers (e.g., technicians), this course emphasizes practical skills while introducing cutting-edge technologies to prepare students for modern, data-driven industries. The focus remains on HVAC, vacuum, compressed air, cooling water, dust collection, hydraulic, pumping, and fan systems, with AI and controls enhancing performance and sustainability. The course spans 12 weeks, balancing hands-on training with technology-driven approaches.</p> <p>Course Title: Advanced Fluid Power Systems: AI, Controls, and Sustainable Design</p>"},{"location":"course-description/#course-description","title":"Course Description:","text":"<p>This course equips technicians with skills to install, maintain, and optimize fluid power systems (HVAC, vacuum, compressed air, cooling water, dust collection, hydraulics, pumping, and fans) while leveraging artificial intelligence (AI), advanced controls, data collection, and software tools. Students will learn to use AI-driven insights, real-time monitoring, and automation to maximize labor efficiency, system performance, and sustainability. Through hands-on labs, software simulations, and real-world scenarios, students will prepare for roles in smart, eco-conscious industries.</p>"},{"location":"course-description/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of the course, students will be able to:</p> <ul> <li>Install, maintain, and troubleshoot fluid power systems using industry-standard tools.</li> <li>Use AI and control systems to monitor and optimize system performance in real time.</li> <li>Collect and analyze data to improve labor efficiency and reduce energy waste.</li> <li>Deploy software tools for predictive maintenance and sustainable system operation.</li> <li>Apply safety, sustainability, and industry standards in all tasks.</li> </ul>"},{"location":"course-description/#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic mechanical aptitude (familiarity with tools and equipment)</li> <li>High school-level math (algebra and measurements)</li> <li>Basic computer skills (e.g., using apps or spreadsheets)</li> <li>No prior engineering or AI knowledge required</li> </ul>"},{"location":"course-description/#course-outline","title":"Course Outline","text":""},{"location":"course-description/#week-1-introduction-to-fluid-power-systems-and-ai","title":"Week 1: Introduction to Fluid Power Systems and AI","text":"<ul> <li>Overview of fluid power systems: HVAC, compressed air, hydraulics, etc.</li> <li>Basics of fluids (water, oil, air) and system components</li> <li>Introduction to AI, controls, and data collection in modern systems</li> <li>AI &amp; Tech Focus: How AI uses historical data to predict issues and optimize labor</li> <li>Lab: Explore a fluid power system and a demo AI dashboard (e.g., system monitoring app)</li> </ul>"},{"location":"course-description/#week-2-system-components-and-smart-controls","title":"Week 2: System Components and Smart Controls","text":"<ul> <li>Pumps, fans, compressors, valves, and filters: function and maintenance</li> <li>Introduction to smart controls (e.g., PLCs, IoT sensors)</li> <li>AI &amp; Tech Focus: Using sensors to collect real-time data on component health</li> <li>Lab: Disassemble a pump, connect a sensor, and view data on a tablet/app</li> </ul>"},{"location":"course-description/#week-3-hvac-systems-with-ai-optimization","title":"Week 3: HVAC Systems with AI Optimization","text":"<ul> <li>Basics of HVAC: airflow, cooling, and heating</li> <li>Maintaining filters, coils, and ducts</li> <li>AI &amp; Tech Focus: AI-driven HVAC control for energy efficiency; software for load balancing</li> <li>Sustainability: Reducing energy use with smart thermostats</li> <li>Lab: Service an HVAC unit and use an AI tool to adjust settings</li> </ul>"},{"location":"course-description/#week-4-vacuum-systems-and-data-driven-maintenance","title":"Week 4: Vacuum Systems and Data-Driven Maintenance","text":"<ul> <li>Vacuum pumps and their industrial uses</li> <li>Checking seals and fixing leaks</li> <li>AI &amp; Tech Focus: AI analyzing vacuum pressure data to schedule maintenance</li> <li>Sustainability: Minimizing power use in vacuum systems</li> <li>Lab: Test a vacuum system and interpret AI-generated maintenance alerts</li> </ul>"},{"location":"course-description/#week-5-compressed-air-systems-and-efficiency","title":"Week 5: Compressed Air Systems and Efficiency","text":"<ul> <li>Compressor setup, air line maintenance, and leak detection</li> <li>Using controls to regulate air pressure</li> <li>AI &amp; Tech Focus: AI detecting leaks via sensor data; software for labor-efficient repairs</li> <li>Sustainability: Reducing compressed air waste</li> <li>Lab: Troubleshoot an air system with an AI diagnostic tool</li> </ul>"},{"location":"course-description/#week-6-cooling-water-systems-and-smart-monitoring","title":"Week 6: Cooling Water Systems and Smart Monitoring","text":"<ul> <li>Cooling towers and pumps: inspection and cleaning</li> <li>Preventing corrosion and scaling</li> <li>AI &amp; Tech Focus: IoT sensors tracking water quality; AI predicting pump failures</li> <li>Sustainability: Water recycling and energy-efficient cooling</li> <li>Lab: Inspect a cooling system and use software to analyze water data</li> </ul>"},{"location":"course-description/#week-7-dust-collection-systems-and-automation","title":"Week 7: Dust Collection Systems and Automation","text":"<ul> <li>Dust collectors: fans, filters, and airflow maintenance</li> <li>Safety for combustible dust</li> <li>AI &amp; Tech Focus: Automated filter cleaning via AI; data collection for airflow optimization</li> <li>Sustainability: Lowering fan energy use with AI controls</li> <li>Lab: Service a dust collector and adjust settings via a control panel</li> </ul>"},{"location":"course-description/#week-8-hydraulic-systems-and-predictive-maintenance","title":"Week 8: Hydraulic Systems and Predictive Maintenance","text":"<ul> <li>Hydraulic fluid checks, pump maintenance, and leak repairs</li> <li>Introduction to hydraulic control systems</li> <li>AI &amp; Tech Focus: AI predicting seal wear using historical data; software for maintenance scheduling</li> <li>Sustainability: Using eco-friendly hydraulic fluids</li> <li>Lab: Service a hydraulic cylinder and review AI maintenance logs</li> </ul>"},{"location":"course-description/#week-9-pumping-systems-and-real-time-controls","title":"Week 9: Pumping Systems and Real-Time Controls","text":"<ul> <li>Water pump installation and troubleshooting</li> <li>Handling cavitation and performance issues</li> <li>AI &amp; Tech Focus: Real-time pump monitoring with IoT; AI optimizing pump speed</li> <li>Sustainability: Energy-efficient pump operation</li> <li>Lab: Install a pump and use a control app to adjust flow</li> </ul>"},{"location":"course-description/#week-10-fan-systems-and-smart-integration","title":"Week 10: Fan Systems and Smart Integration","text":"<ul> <li>Fan maintenance: belts, blades, and vibration control</li> <li>Noise reduction techniques</li> <li>AI &amp; Tech Focus: AI analyzing vibration data; automated fan balancing via controls</li> <li>Sustainability: Reducing fan power consumption</li> <li>Lab: Balance a fan and use software to monitor performance</li> </ul>"},{"location":"course-description/#week-11-system-optimization-and-software-deployment","title":"Week 11: System Optimization and Software Deployment","text":"<ul> <li>Practical optimization: fixing leaks, adjusting controls</li> <li>Deploying software for system monitoring (e.g., SCADA, CMMS)</li> <li>AI &amp; Tech Focus: AI combining historical and live data to minimize labor and energy use</li> <li>Sustainability: Lifecycle analysis for eco-friendly upgrades</li> <li>Lab: Optimize a mixed system (e.g., HVAC + fan) using AI software and controls</li> </ul>"},{"location":"course-description/#week-12-safety-standards-sustainability-and-final-project","title":"Week 12: Safety, Standards, Sustainability, and Final Project","text":"<ul> <li>Safety: handling high-pressure systems, noise, and chemicals</li> <li>Industry standards (e.g., OSHA, ASHRAE) and green certifications</li> <li>AI &amp; Tech Focus: AI ensuring compliance and tracking sustainability metrics</li> <li>Final Project: Design and optimize a fluid power system using AI tools, controls, and data collection; present labor and sustainability benefits</li> <li>Course wrap-up: Career paths in smart systems</li> </ul>"},{"location":"course-description/#assessment-and-grading","title":"Assessment and Grading:","text":"<ul> <li>Class Participation and Labs: 25%</li> <li>Weekly Hands-On and Software Assignments: 25%</li> <li>AI and Controls Exercises: 20% (e.g., using monitoring apps or dashboards)</li> <li>Final Project: 20% (system design with AI/controls integration)</li> <li>Final Skills Test: 10% (troubleshoot with AI and control tools)</li> </ul>"},{"location":"course-description/#required-materials","title":"Required Materials:","text":"<ul> <li>Textbook: Fluid Power Basics by Jay F. Hooper (or similar technician guide)</li> <li>PPE: safety glasses, gloves, ear protection</li> <li>Basic toolkit: wrenches, screwdrivers, multimeter</li> <li>Access to AI-enabled software (e.g., free CMMS apps, IoT demo tools, or instructor-provided platforms)</li> <li>Tablet or laptop for accessing control dashboards (optional, provided by program if needed)</li> </ul>"},{"location":"course-description/#recommended-resources","title":"Recommended Resources:","text":"<ul> <li>Manufacturer manuals for pumps, fans, and controls</li> <li>Online tutorials on IoT, PLCs, and AI in maintenance</li> <li>Sustainability resources (e.g., EPA guidelines on energy-efficient systems)</li> <li>Trade articles on AI in fluid power systems</li> </ul>"},{"location":"course-description/#how-ai-and-technology-elevate-the-course","title":"How AI and Technology Elevate the Course","text":"<p>This syllabus integrates AI, controls, data collection, and software to create a future-ready technician workforce:</p> <ul> <li> <p>AI for Learning and Mastery: AI uses historical system data (e.g., past failures, maintenance logs) to guide students, accelerating their understanding of each system's quirks and needs.</p> </li> <li> <p>Real-Time Data Collection: IoT sensors and control systems (e.g., PLCs, SCADA) provide live updates on system health, enabling technicians to act quickly on issues like leaks or inefficiencies.</p> </li> <li> <p>Software Deployment: Students learn to use tools like CMMS (Computerized Maintenance Management Systems) and AI dashboards to schedule tasks, track performance, and reduce labor waste.</p> </li> <li> <p>Labor Efficiency: AI prioritizes high-impact tasks (e.g., fixing a critical leak) and automates routine checks, allowing technicians to focus on skilled work.</p> </li> <li> <p>System Efficiency: AI and controls optimize settings (e.g., fan speed, pump flow) to minimize energy use and wear, extending system life.</p> </li> <li> <p>Sustainability: Data-driven insights help reduce energy, water, and material waste, aligning with green standards and lowering operational costs.</p> </li> </ul> <p>By blending hands-on skills with smart technology, this course prepares students to thrive in industries prioritizing efficiency and sustainability.**</p>"},{"location":"feedback/","title":"Feedback on Graph Data Modeling","text":"<p>You are welcome to connect with me on anytime on LinkedIn or submit any issues to GitHub Issue Log.  All pull-requests with fixes to errors or additions are always welcome.</p> <p>If you would like to fill out a short survey and give us ideas on how we can create better tools for intelligent textbooks in the future.</p>"},{"location":"glossary/","title":"Glossary of Terms","text":""},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#term","title":"Term","text":"<p>This is the definition of the term.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"prompts/01-course-description/","title":"Course Description","text":""}]}